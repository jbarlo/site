---
import moment from "moment";
import Quiet from "../components/Quiet";
import { getPostHeadingId, getPostTitle } from "../utils";
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"projects">;
}

const { post } = Astro.props;

// TODO change frontmatter parser to assume local time
const created = moment(post.data.created).toISOString().replace("z", "");
const lastUpdated = moment(post.data["last-updated"])
  .toISOString()
  .replace("z", "");

const { Content: PostContent } = await post.render();
---

<article class="post">
  <div
    class="flex gap-x-2 flex-col sm:flex-row sm:justify-between sm:items-end pb-2"
  >
    <h3 class="text-lg" id={getPostHeadingId(post)}>
      <a class="hover:underline" href={`#${getPostHeadingId(post)}`}>
        {getPostTitle(post)}
      </a>
    </h3>
    <span class="sm:text-right">
      <span class="inline-block">
        {moment(created).format("MMM D, YYYY")}
      </span>
      <span class="inline-block">
        {
          moment(created).toISOString() !==
            moment(lastUpdated).toISOString() && (
            <Quiet>
              ({`Last updated: ${moment(lastUpdated).format("MMM D, YYYY")}`})
            </Quiet>
          )
        }
      </span>
    </span>
  </div>
  <PostContent />
</article>

<style>
  .post :global(p) {
    @apply leading-snug;
    @apply pb-3;
  }
  .post :global(img) {
    @apply m-auto;
  }
</style>
