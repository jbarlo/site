---
import Footer from "../../layouts/Footer.astro";
import Header from "../../layouts/Header.astro";
import Layout from "../../layouts/Layout.astro";
import Three from "../../layouts/Three.astro";
import {
  getPostHeadingId,
  getPostTitle,
  getProjectSlugFromSlug,
  getPublishedProjects,
} from "../../utils";
import ProjectPost from "../../layouts/ProjectPost.astro";
import { isNil, compact } from "lodash-es";
import { projectIndexSchema } from "../../schemas";

export const getStaticPaths = async () => {
  const projects = await getPublishedProjects(({ data }) => data.isIndex);
  return compact(
    projects.map((project) => {
      const projectId = getProjectSlugFromSlug(project.slug);
      if (isNil(projectId)) return null;
      return { params: { projectId } };
    }),
  );
};

const { projectId } = Astro.params;

const projectEntries = await getPublishedProjects(({ slug }) =>
  slug.startsWith(projectId),
);

const indexEntry = projectEntries.find((entry) => entry.data.isIndex);
const IndexContent = isNil(indexEntry)
  ? null
  : (await indexEntry.render()).Content;

// appease TS
const indexParseRes = projectIndexSchema.safeParse(indexEntry);
const indexEntyLabel = indexParseRes.success ? indexParseRes.data.label : "";

const projectPosts = projectEntries.filter(({ data }) => !data.isIndex);
---

<Layout title="garage | barlo">
  <div class="bg-limed-spruce text-text">
    <div class="flex min-h-screen flex-col leading-relaxed">
      <Header />
      <Three>
        <a href="/garage" class="hover:underline pb-4">‚Üê back</a>
        <h2 class="text-xl">Project: {indexEntyLabel}</h2>
        {IndexContent && <IndexContent />}
        {
          projectPosts.length > 0 && (
            <>
              <hr class="mt-2 mb-2" />
              <div class="grow gap-2 2xl:gap-5 flex basis-0 flex-col 2xl:flex-row-reverse pb-20 2xl:items-start">
                <div class="bg-limed-spruce-700 border p-2 2xl:w-60 sticky top-28 sm:top-20">
                  {projectPosts.map((post) => (
                    <div>
                      <a
                        class="hover:underline"
                        href={`#${getPostHeadingId(post)}`}
                      >
                        {getPostTitle(post)}
                      </a>
                    </div>
                  ))}
                </div>
                <div class="basis-0 grow">
                  {projectPosts.map((post, i) => (
                    <>
                      {i > 0 && <hr class="mt-5 mb-4" />}
                      <ProjectPost post={post} />
                    </>
                  ))}
                </div>
              </div>
            </>
          )
        }
      </Three>
      <Footer />
    </div>
  </div>
</Layout>

<style>
  body,
  html {
    scroll-padding-top: 20%;
  }
</style>
